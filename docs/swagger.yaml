basePath: /api/v1
consumes:
- application/json
definitions:
  model.Segment:
    properties:
      createdAt:
        description: |-
          User creation date
        type: string
        format: date-time
      id:
        description: |-
          ID of segment
        type: integer
      slug:
        description: |-
          Slug of segment
        type: string
      updatedAt:
        description: |-
          User update date
        type: string
        format: date-time
    type: object
  model.User:
    properties:
      createdAt:
        description: |-
          User creation date
        type: string
        format: date-time
      firstName:
        description: |-
          Name of user
        type: string
      id:
        description: |-
          ID of user
        type: integer
      password:
        description: |-
          Password of user
        type: string
      secondName:
        description: |-
          Second Name of user
        type: string
      updatedAt:
        description: |-
          User update date
        type: string
        format: date-time
      username:
        description: |-
          Username of user
          in: string
        type: string
    type: object
  model.UserSegments:
    properties:
      addSlugs:
        description: List of segment slugs to add
        items:
          type: string
        type: array
      removeSlugs:
        description: List of segment slugs to remove
        items:
          type: string
        type: array
      userId:
        description: ID of user
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  title: Dynamic Segmentation Service API
  version: 1.0.0
paths:
  /segments:
    post:
      consumes:
      - application/json
      description: Create Segment
      operationId: create-segment
      parameters:
      - description: segment info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Segment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Segment'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: CreateSegmentRequest
      tags:
      - segment
  /segments/{segment_id}:
    delete:
      consumes:
      - application/json
      description: Delete Segment
      operationId: delete-segment
      parameters:
      - description: Segment ID
        in: path
        name: segment_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: DeleteSegmentRequest
      tags:
      - segment
  /user-segments:
    put:
      consumes:
      - application/json
      description: Update User Segments
      operationId: update-user-segments
      parameters:
      - description: user segments info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UserSegments'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSegments'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: UpdateUserSegmentsRequest
      tags:
      - userSegment
  /user-segments/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Get User Segments
      operationId: get-segment
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Segment'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: GetUserSegmentsRequest
      tags:
      - userSegment
  /users:
    post:
      consumes:
        - application/json
      description: Create User
      operationId: create-user
      parameters:
        - description: user info
          in: body
          name: input
          required: true
          schema:
            $ref: '#/definitions/model.User'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: CreateUserRequest
      tags:
        - user
produces:
- application/json
schemes:
- http
swagger: "2.0"
