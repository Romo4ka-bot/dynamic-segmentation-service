// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/segments": {
            "post": {
                "description": "Create Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "CreateSegmentRequest",
                "operationId": "create-segment",
                "parameters": [
                    {
                        "description": "segment info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Segment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Segment"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/segments/{segment_id}": {
            "delete": {
                "description": "Delete Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "DeleteSegmentRequest",
                "operationId": "delete-segment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Segment ID",
                        "name": "segment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user-segments": {
            "put": {
                "description": "Update User Segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userSegment"
                ],
                "summary": "UpdateUserSegmentsRequest",
                "operationId": "update-user-segments",
                "parameters": [
                    {
                        "description": "user segments info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserSegments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserSegments"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user-segments/users/{user_id}": {
            "get": {
                "description": "Get User Segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userSegment"
                ],
                "summary": "GetUserSegmentsRequest",
                "operationId": "get-segment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Segment"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
		"/users": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CreateUserRequest",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
		}
    },
    "definitions": {
        "model.Segment": {
            "type": "object",
            "required": [
                "slug"
            ],
            "properties": {
                "createdAt": {
                    "description": "User creation date",
                    "type": "string",
					"format": "date-time"
                },
                "id": {
                    "description": "ID of segment",
                    "type": "integer"
                },
                "slug": {
                    "description": "Slug of segment",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "User update date",
                    "type": "string",
					"format": "date-time"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "firstName",
                "password",
                "secondName",
                "username"
            ],
            "properties": {
                "createdAt": {
                    "description": "User creation date",
                    "type": "string",
					"format": "date-time"
                },
                "firstName": {
                    "description": "Name of user",
                    "type": "string"
                },
                "id": {
                    "description": "ID of user",
                    "type": "integer"
                },
                "password": {
                    "description": "HashPassword of user",
                    "type": "string"
                },
                "secondName": {
                    "description": "Second Name of user",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "User update date",
                    "type": "string",
					"format": "date-time"
                },
                "username": {
                    "description": "Username of user",
                    "type": "string"
                }
            }
        },
        "model.UserSegments": {
            "type": "object",
            "properties": {
                "addSlugs": {
                    "description": "List of segment slugs to add",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "removeSlugs": {
                    "description": "List of segment slugs to remove",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "description": "ID of user",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Dynamic Segmentation Service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
